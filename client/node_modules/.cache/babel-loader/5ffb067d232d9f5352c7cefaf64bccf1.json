{"ast":null,"code":"import axios from \"axios\";\nconst SET_CREDENTIONALS = 'SET_CREDENTIONALS';\nlet initialState = {\n  id: '',\n  token: '',\n  isAuthenticated: false\n};\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_CREDENTIONALS:\n      return { ...state,\n        ...action.data,\n        isAuthenticated: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setCredentionals = data => ({\n  type: SET_CREDENTIONALS,\n  data\n});\n\nexport const register = data => {\n  return dispatch => {\n    axios.post(\"http://localhost:5000/auth/register\", { ...data\n    }).then();\n  };\n};\nexport const login = (login, password) => {\n  return dispatch => {\n    axios.post(\"http://localhost:5000/auth/login\", {\n      login,\n      password\n    }).then(data => {\n      axios.defaults.headers.common['Autorization'] = \"Bearer\" + data.token;\n      dispatch(setCredentionals(data));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/lessonwar/hello-world/client/src/redux/authReducer.js"],"names":["axios","SET_CREDENTIONALS","initialState","id","token","isAuthenticated","authReducer","state","action","type","data","setCredentionals","register","dispatch","post","then","login","password","defaults","headers","common"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,EADW;AAEfC,EAAAA,KAAK,EAAE,EAFQ;AAGfC,EAAAA,eAAe,EAAE;AAHF,CAAnB;AAMA,OAAO,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,iBAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEF,WAAGC,MAAM,CAACE,IAFR;AAGFL,QAAAA,eAAe,EAAE;AAHf,OAAN;;AAKA;AACI,aAAOE,KAAP;AARV;AAUD,CAXM;;AAaP,MAAMI,gBAAgB,GAAGD,IAAI,KAAK;AAACD,EAAAA,IAAI,EAAER,iBAAP;AAA0BS,EAAAA;AAA1B,CAAL,CAA7B;;AAEA,OAAO,MAAME,QAAQ,GAAIF,IAAD,IAAU;AAC9B,SAAQG,QAAD,IAAc;AACpBb,IAAAA,KAAK,CAACc,IAAN,CAAW,qCAAX,EAAkD,EAAC,GAAGJ;AAAJ,KAAlD,EACEK,IADF;AAEA,GAHD;AAIH,CALM;AAOP,OAAO,MAAMC,KAAK,GAAG,CAACA,KAAD,EAAQC,QAAR,KAAqB;AACtC,SAAQJ,QAAD,IAAc;AACpBb,IAAAA,KAAK,CAACc,IAAN,CAAW,kCAAX,EAA+C;AAACE,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA/C,EACEF,IADF,CACQL,IAAD,IAAQ;AACbV,MAAAA,KAAK,CAACkB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAA8C,WAAWV,IAAI,CAACN,KAA9D;AACCS,MAAAA,QAAQ,CAACF,gBAAgB,CAACD,IAAD,CAAjB,CAAR;AACH,KAJA;AAKJ,GANG;AAOH,CARM","sourcesContent":["import axios from \"axios\";\r\nconst SET_CREDENTIONALS = 'SET_CREDENTIONALS';\r\n\r\nlet initialState = {\r\n    id: '',\r\n    token: '',\r\n    isAuthenticated: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case SET_CREDENTIONALS:\r\n        return{\r\n            ...state,\r\n            ...action.data,\r\n            isAuthenticated: true\r\n        }\r\n        default:\r\n            return state;\r\n  }\r\n}\r\n\r\nconst setCredentionals = data => ({type: SET_CREDENTIONALS, data});\r\n\r\nexport const register = (data) => {\r\n    return (dispatch) => {\r\n     axios.post(\"http://localhost:5000/auth/register\", {...data})\r\n      .then();\r\n    }\r\n}\r\n\r\nexport const login = (login, password) => {\r\n    return (dispatch) => {\r\n     axios.post(\"http://localhost:5000/auth/login\", {login, password})\r\n      .then((data)=>{\r\n       axios.defaults.headers.common['Autorization']=\"Bearer\" + data.token;\r\n        dispatch(setCredentionals(data));\r\n    });\r\n}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}